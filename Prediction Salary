import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, recall_score, precision_score
data = pd.read_csv("https://github.com/ryankertayasa/DA/blob/main/salary.csv")
data.head()
for i in data.columns:
    print("Column : ",i)
    print("\n")
    print(data[i].value_counts())
    print("\n")
data['workclass'] = data['workclass'].replace(' ?', np.nan)
data['occupation'] = data['occupation'].replace(" ?", np.nan)
data['native-country'] = data['native-country'].replace(" ?", np.nan)
data.isna().sum()
data = data.dropna(how="any")
data.isna().sum()
plt.figure(figsize=(10,10))
plt.style.use("fivethirtyeight")
bins = range(0,100, 10)
plt.hist(data.age, bins=bins, edgecolor = "black", log = True)
plt.axvline(data.age.median(), color = "red")
plt.title("Age Distribution")
plt.xlabel("Age")
plt.show()

plt.figure(figsize=(10,10))
data.workclass.value_counts().plot(kind="bar", color="blue")
plt.xlabel("Workclass")
plt.tight_layout()
plt.show()

plt.figure(figsize=(10,10))
plt.hist(data.fnlwgt, edgecolor="black", color="red", log=True)
plt.tight_layout()
plt.xlabel("fnlwgt")
plt.show()

plt.figure(figsize=(15,15))
data['education'].value_counts().plot(kind='bar', color = "green")
plt.xlabel("Education")
plt.show()

plt.figure(figsize=(10,10))
bins = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]
plt.hist(data["education-num"], edgecolor="black", bins = bins, color = "orange")
plt.axvline(data["education-num"].median(), color="purple")
plt.title("Education Number Distribution")
plt.xlabel("Education Number")
plt.show()

plt.figure(figsize=(10,10))
data['occupation'].value_counts().plot(kind="bar", color = "cyan", edgecolor="black")
plt.title("Occupation")
plt.show()

data = data.loc[:, ['workclass',"fnlwgt","education","education-num","occupation",
                   "capital-gain","capital-loss","hours-per-week","native-country","salary"]]
data.head()

lab_enc = LabelEncoder()

data['workclass'] = lab_enc.fit_transform(data['workclass'])
data['education'] = lab_enc.fit_transform(data['education'])
data['occupation'] = lab_enc.fit_transform(data['occupation'])
data['native-country'] = lab_enc.fit_transform(data['native-country'])
data['salary'] = lab_enc.fit_transform(data['salary'])
data.head()

sns.pairplot(data.drop("salary", axis=1))
plt.show()

clf = RandomForestClassifier(n_estimators = 200, criterion="gini", max_depth = 6)
X = data.iloc[:, 0:-1]
y = data.iloc[:, -1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
print(confusion_matrix(y_pred, y_test))
print(recall_score(y_pred, y_test))
